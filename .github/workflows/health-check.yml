name: Health Check
permissions:
  contents: write

env:
  DOCKER_USER: ${{secrets.DOCKER_USER}}
  DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
  REPO_NAME: ${{secrets.REPO_NAME}}
  HF_USER: ${{secrets.HF_USER}}
  HF_API_TOKEN: ${{secrets.HF_API_TOKEN}}
  HF_SPACE_NAME: ${{secrets.HF_SPACE_NAME}}

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  ci_pipeline:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install uv
        uv sync

    - name: Format code with Black
      run: |
        uv run black src/

    - name: Lint code with Pylint
      run: |
        uv run pylint --ignore=etl --disable=R,C src/

    - name: Streamlit app health check
      run: |
        nohup uv run streamlit run app.py --server.port 8501 --server.headless true &
        sleep 10  
        curl --fail http://localhost:8501/_stcore/health || exit 1
      shell: bash

    - name: Cleanup Streamlit process
      run: |
        pkill -f "streamlit"


  cd_pipeline:

      runs-on: ubuntu-latest
      needs: [ci_pipeline]

      steps:

      - uses: actions/checkout@v3
      - name: Docker login
        run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin

      - name: Get current date
        run: echo "DATE=$(date +'%Y-%m-%d--%M-%S')" >> $GITHUB_ENV

      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag $DOCKER_USER/$REPO_NAME:${{ env.DATE }}

      - name: Docker Push
        run: docker push $DOCKER_USER/$REPO_NAME:${{ env.DATE }}

      - name: Update Dockerfile for HF Space
        run: |
          echo "FROM docker.io/$DOCKER_USER/$REPO_NAME:${{ env.DATE }}" > Dockerfile
          echo "USER user" >> Dockerfile
          echo "ENV PATH=\$PATH:/home/user/.local/bin" >> Dockerfile
          echo "WORKDIR /app" >> Dockerfile
          echo "COPY --chown=user . /app/" >> Dockerfile
          echo "EXPOSE 8501" >> Dockerfile
          echo 'CMD ["uv", "run", "streamlit", "run", "app.py", "--server.port=8501", "--server.address=0.0.0.0"]' >> Dockerfile

      - name: Commit and Push Dockerfile to HF Space
        run: |
          pip install huggingface_hub
          python -c "
          from huggingface_hub import HfApi, auth_check
          from huggingface_hub.utils import GatedRepoError
          
          api = HfApi()
          
          try:
              auth_check('$HF_USER/$HF_SPACE_NAME')
          except GatedRepoError:
              print('No permission to access the repo')

          api.create_commit(
              repo_id='$HF_USER/$HF_SPACE_NAME',
              commit_message="Update Docker Image - tag ${{ env.DATE }}",
              token=$HF_API_TOKEN,
              operations={
                path_in_repo : 'Dockerfile',
                path_or_fileobj : 'Dockerfile'
              }   
          )
          "