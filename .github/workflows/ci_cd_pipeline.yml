name: CI/CD Pipeline
permissions:
  contents: write

env:
  DOCKER_USER: ${{secrets.DOCKER_USER}}
  DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
  REPO_NAME: ${{secrets.REPO_NAME}}
  HF_USER: ${{secrets.HF_USER}}
  HF_API_TOKEN: ${{secrets.HF_API_TOKEN}}
  HF_SPACE_NAME: ${{secrets.HF_SPACE_NAME}}

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  ci_pipeline:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install uv
        uv sync

    - name: Format code with Black
      run: |
        uv run black src/

    - name: Lint code with Pylint
      run: |
        uv run pylint --disable=R,C src/

    - name: Streamlit app health check
      run: |
        nohup uv run streamlit run app.py --server.port 8501 --server.headless true &
        sleep 10  
        curl --fail http://localhost:8501/_stcore/health || exit 1
      shell: bash

    - name: Cleanup Streamlit process
      run: |
        pkill -f "streamlit"


  cd_pipeline:

      runs-on: ubuntu-latest
      needs: [ci_pipeline]

      steps:

      - uses: actions/checkout@v3
      - name: Docker login
        run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin

      - name: Get current date
        run: echo "DATE=$(date +'%Y-%m-%d--%M-%S')" >> $GITHUB_ENV

      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag $DOCKER_USER/$REPO_NAME:${{ env.DATE }}

      - name: Docker Push
        run: docker push $DOCKER_USER/$REPO_NAME:${{ env.DATE }}

      - name: Update the HF Space
        env:
          DOCKER_USER : ${{secrets.DOCKER_USER}}
          REPO_NAME: ${{secrets.REPO_NAME}}
          DATE: ${{ env.DATE }}
          HF_USER: ${{secrets.HF_USER}}
          HF_SPACE_NAME: ${{secrets.HF_SPACE_NAME}}
          HF_API_TOKEN: ${{secrets.HF_API_TOKEN}}
        run: |
          pip install huggingface_hub
          python scripts/update_hf_space.py